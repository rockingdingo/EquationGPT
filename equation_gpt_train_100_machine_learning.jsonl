{"completion": " The related materials of Domain-Adversarial Neural Networks DANN is: 1.Domain-Adversarial Neural Networks:<url>https://arxiv.org/pdf/1412.4446v2.pdf</url>;", "tag": "machine learning,transfer learning", "prompt": "Can you help me find related materials of Domain-Adversarial Neural Networks DANN?"}
{"completion": " The equation for Bregman Divergences is: <equation>d_{\\\\phi}(z,z^{'})=\\\\phi(z) - \\\\phi(z^{'})-(z-z^{'})^{T} \\\\nabla \\\\phi(z^{'})</equation>. Here is the brief introduction of Bregman Divergences:\n         The prototypi- cal networks algorithm is equivalent to performing mixture density estimation on the support set with an exponential family density. A regular Bregman divergence d_{\\phi} is defined as above. \\phi is a differentiable, strictly convex function of the Legendre type. Examples of Bregman divergences include squared Euclidean distance and Mahalanobis distance.\n    ", "tag": "machine learning", "prompt": "Can you explain Bregman Divergences?"}
{"completion": " The Latex Code for equation Conditional Random Field CRFis <equation>P(y|x)=\\\\frac{1}{Z(x)}\\\\exp(\\\\sum_{i,k}\\\\lambda_{k}t_{k}(y_{i-1},y_{i},x,i))+\\\\sum_{i,l}\\\\mu_{l}s_{l}(y_{i},x,i)) \\\\\\\\\\         Z(x)=\\\\sum_{y}\\\\exp(\\\\sum_{i,k}\\\\lambda_{k}t_{k}(y_{i-1},y_{i},x,i))+\\\\sum_{i,l}\\\\mu_{l}s_{l}(y_{i},x,i))</equation>", "tag": "machine learning,nlp", "prompt": "Please give me some hints on equation Conditional Random Field CRF?"}
{"completion": " The equation for Kullback-Leibler Divergence is <equation>KL(P||Q)=\\\\sum_{x}P(x)\\\\log(\\\\frac{P(x)}{Q(x)})</equation>. The meaning of symbol <equation>KL(P||Q)</equation> in Kullback-Leibler Divergence is: KL Divergence between P and Q.", "tag": "machine learning,kl divergence", "prompt": "Help me find the meaning of symbol <equation>KL(P||Q)</equation> in Kullback-Leibler Divergence?"}
{"completion": " The Latex Code for equation Language Modellingis <equation>p(x)=\\\\prod^{n}_{i=1} p(s_{n}|s_{1},...,s_{n-1})</equation>", "tag": "machine learning", "prompt": "Can you write equation Language Modelling?"}
{"completion": " The equation for Support Vector Machine SVM is <equation>\\\\max_{w,b} \\\\frac{2}{||w||} \\\\\\\\\\             s.t.\\\\ y_{i}(w^{T}x_{i} + b) \\\\geq 1, i=1,2,...,m  \\\\\\\\ \\             L(w,b,\\\\alpha)=\\\\frac{1}{2}||w||^2 + \\\\sum^{m}_{i=1}a_{i}(1-y_{i}(w^{T}x_{i} + b))</equation>. The meaning of symbol <equation>w</equation> in Support Vector Machine SVM is: Weight of Linear Classifier.", "tag": "machine learning,svm", "prompt": "What is the meaning of <equation>w</equation> in Support Vector Machine SVM?"}
{"completion": " The Latex Code for equation Prototypical Networks Protonetsis <equation>c_{k}=\\\\frac{1}{|S_{k}|}\\\\sum_{(x_{i},y_{i}) \\\\in S_{k}} f_{\\\\phi}(x) \\\\\\\\ p_{\\\\phi}(y=k|x)=\\\\frac{\\\\exp(-d(f_{\\\\phi}(x), c_{k}))}{\\\\sum_{k^{'}} \\\\exp(-d(f_{\\\\phi}(x), c_{k^{'}})} \\\\\\\\\\\\min J(\\\\phi)=-\\\\log p_{\\\\phi}(y=k|x)</equation>", "tag": "machine learning,meta learning", "prompt": "Can you write equation Prototypical Networks Protonets?"}
{"completion": " The equation for Support Vector Machine SVM is <equation>\\\\max_{w,b} \\\\frac{2}{||w||} \\\\\\\\\\             s.t.\\\\ y_{i}(w^{T}x_{i} + b) \\\\geq 1, i=1,2,...,m  \\\\\\\\ \\             L(w,b,\\\\alpha)=\\\\frac{1}{2}||w||^2 + \\\\sum^{m}_{i=1}a_{i}(1-y_{i}(w^{T}x_{i} + b))</equation>. The meaning of symbol <equation>w</equation> in Support Vector Machine SVM is: Weight of Linear Classifier.", "tag": "machine learning,svm", "prompt": "Can you explain the symbol <equation>w</equation> in Support Vector Machine SVM?"}
{"completion": " The Latex Code for equation Maximum Mean Discrepancy MMDis <equation>\\\\textup{MMD}(\\\\mathbb{F},X,Y):=\\\\sup_{f \\\\in\\\\mathbb{F}}(\\\\frac{1}{m}\\\\sum_{i=1}^{m}f(x_{i}) -\\\\frac{1}{n}\\\\sum_{j=1}^{n}f(y_{j}))</equation>", "tag": "machine learning,mmd", "prompt": "Please give me some hints on equation Maximum Mean Discrepancy MMD?"}
{"completion": " The equation for TransE is: <equation>\\\\mathcal{L}=\\\\sum_{(h,r,t) \\\\in S} \\\\sum_{(h^{'},r^{'},t^{'}) \\\\in S^{'}_{(h,r,t)}} \\\\[ \\\\gamma + d(h + r, t) - d(h^{'} + r^{'}, t^{'}) \\\\]_{+} \\\\\\\\ S^{'}_{(h,r,t)}=\\\\{(h^{'},r,t)|h^{'} \\\\in E\\\\} \\\\cup \\\\{(h,r,t^{'})|t^{'} \\\\in E\\\\} \\\\\\\\ d(h + r, t)=||h + r - t||^{2}_{2}</equation>. Here is the brief introduction of TransE:\n      Given a training set S of triplets (h, l, t) composed of two entities h, t ? E (the set of entities) and a relationship l ? L (the set of relationships), our model learns vector embeddings of the entities and the relationships. The embeddings take values in Rk (k is a model hyperparameter) and are denoted with the same letters, in boldface characters. The basic idea behind our model is that the functional relation induced by the l-labeled edges corresponds to a translation of the embeddings, i.e. we want that h + l ? t when (h, l, t) holds (t should be a nearest neighbor of h + l), while h + l should be far away from t otherwise. Following an energy-based framework, the energy of a triplet is equal to d(h + l, t) for some dissimilarity measure d, which we take to be either the L1 or the L2 -norm. To learn such embeddings, we minimize a margin-based ranking criterion over the training set. See paper Translating Embeddings for Modeling Multi-relational Data for more details.\n\n        Related Documents\n\nTranslating Embeddings for Modeling Multi-relational Data\n\nRelated Videos\n\n\n", "tag": "machine learning", "prompt": "What's the meaning of TransE?"}
{"completion": " The Latex Code for equation KL-Divergenceis <equation>KL(P||Q)=\\\\sum_{x}P(x)\\\\log(\\\\frac{P(x)}{Q(x)})</equation>", "tag": "machine learning", "prompt": "How to write equation KL-Divergence?"}
{"completion": " The related materials of Hidden Markov Model is: ", "tag": "machine learning,nlp", "prompt": "Can you help me find related materials of Hidden Markov Model?"}
{"completion": " The Latex Code for equation Domain-Adversarial Neural Networks DANNis <equation>\\\\min [\\\\frac{1}{m}\\\\sum^{m}_{1}\\\\mathcal{L}(f(\\\\textbf{x}^{s}_{i}),y_{i})+\\\\lambda \\\\max(-\\\\frac{1}{m}\\\\sum^{m}_{i=1}\\\\mathcal{L}^{d}(o(\\\\textbf{x}^{s}_{i}),1)-\\\\frac{1}{m^{'}}\\\\sum^{m^{'}}_{i=1}\\\\mathcal{L}^{d}(o(\\\\textbf{x}^{t}_{i}),0))]</equation>", "tag": "machine learning,transfer learning", "prompt": "Can you write equation Domain-Adversarial Neural Networks DANN?"}
{"completion": " The Latex Code for equation Diffusion Model Variational Lower Bound Lossis <equation>\\\\begin{aligned}\\             L_\\\\text{VLB} &= L_T + L_{T-1} + \\\\dots + L_0 \\\\\\\\\\             \\\\text{where } L_T &= D_\\\\text{KL}(q(\\\\mathbf{x}_T \\\\vert \\\\mathbf{x}_0) \\\\parallel p_\\\\theta(\\\\mathbf{x}_T)) \\\\\\\\\\             L_t &= D_\\\\text{KL}(q(\\\\mathbf{x}_t \\\\vert \\\\mathbf{x}_{t+1}, \\\\mathbf{x}_0) \\\\parallel p_\\\\theta(\\\\mathbf{x}_t \\\\vert\\\\mathbf{x}_{t+1})) \\\\text{ for }1 \\\\leq t \\\\leq T-1 \\\\\\\\\\             L_0 &= - \\\\log p_\\\\theta(\\\\mathbf{x}_0 \\\\vert \\\\mathbf{x}_1)\\             \\\\end{aligned}</equation>", "tag": "machine learning,diffusion", "prompt": "Can you write equation Diffusion Model Variational Lower Bound Loss?"}
{"completion": " The equation for Bound on Target Domain Error is: <equation>\\\\epsilon_{T}(h) \\\\le \\\\hat{\\\\epsilon}_{S}(h) + \\\\sqrt{\\\\frac{4}{m}(d \\\\log \\\\frac{2em}{d} + \\\\log \\\\frac{4}{\\\\delta })} + d_{\\\\mathcal{H}}(\\\\tilde{\\\\mathcal{D}}_{S}, \\\\tilde{\\\\mathcal{D}}_{T}) + \\\\lambda \\\\\\\\\\             \\\\lambda = \\\\lambda_{S} + \\\\lambda_{T}</equation>. Here is the brief introduction of Bound on Target Domain Error:\n\n            I will explain this equation in more details. Domain adaptation literatures prove that the test error on target domain \\epsilon_{T}(h) is bounded by three terms: 1. the empirical estimate of training errors on the source domain \\hat{\\epsilon}_{S}(h); 2. the distance divergence between source domain and target domain d(Ds, Dt), 3. Fixed term of VC-Dimension(d), sample size of source domain m, e as the natural logarithm. \\lambda denotes a fixed term as the sum of \\lambda_{S} and \\lambda_{T}, which represent the errors of models training on Ds and Dt respectively. From the above analysis, we can see that if data source Ds and Dt are similar(the divergence between source and target domain distribution Ds and Dt is small), the error on target domain will also be bounded, that's how models trained on source domain will perform better on similar distributed target domains. \n        You can check more detailed information in this NIPS 2006 paper by Shai Ben-David for more details.\n        \nRelated Documents\n\nAnalysis of Representations for Domain Adaptation\n\nRelated Videos\n\n\n", "tag": "machine learning,transfer learning", "prompt": "Can you give me a brief introduction to Bound on Target Domain Error?"}
{"completion": " The equation for S-Learner is: <equation>\\\\mu(x,w)=\\\\mathbb{E}[Y_{i}|X=x_{i},W=w] \\\\\\\\\\                 \\\\hat{\\\\tau}(x)=\\\\hat{\\\\mu}(x,1)-\\\\hat{\\\\mu}(x,0)</equation>. Here is the brief introduction of S-Learner:\n            S-Learner use a single machine learning estimator \\mu(x,w) to estimate outcome Y directly. And the treatment assigment variable W=0,1 is treated as features of S-learner models. The CATE estimation is calculated as the difference between two outputs given the same model \\mu and different inputs features of W, namely w=1 and w=0.\n        ", "tag": "machine learning,causual inference", "prompt": "Please give me detailed tutorial of S-Learner?"}
{"completion": " The Latex Code for equation Domain Adaptation H-Divergenceis <equation>d_{\\\\mathcal{H}}(\\\\mathcal{D},\\\\mathcal{D}^{'})=2\\\\sup_{h \\\\in \\\\mathcal{H}}|\\\\Pr_{\\\\mathcal{D}}[I(h)]-\\\\Pr_{\\\\mathcal{D}^{'}}[I(h)]|</equation>", "tag": "machine learning,transfer learning", "prompt": "Show me the latex code of equation Domain Adaptation H-Divergence?"}
{"completion": " The Latex Code for equation Deep Kernel Learningis <equation>k(x_{i},x_{j}|\\\\phi)=k(h(x_i,w_k),h(x_j,w_k)|w_k,\\\\phi)</equation>", "tag": "machine learning,Deep Kernel Learning", "prompt": "How to write equation Deep Kernel Learning?"}
{"completion": " The equation for Progressive Layered Extraction PLE is: <equation>g^{k}(x)=w^{k}(x)S^{k}(x) \\\\\\\\\\             w^{k}(x)=\\\\text{softmax}(W^{k}_{g}x) \\\\\\\\\\             S^{k}(x)=\\\\[E^{T}_{(k,1)},E^{T}_{(k,2)},...,E^{T}_{(k,m_{k})},E^{T}_{(s,1)},E^{T}_{(s,2)},...,E^{T}_{(s,m_{s})}\\\\]^{T} \\\\\\\\\\             y^{k}(x)=t^{k}(g^{k}(x)) \\\\\\\\\\             g^{k,j}(x)=w^{k,j}(g^{k,j-1}(x))S^{k,j}(x) </equation>. Here is the brief introduction of Progressive Layered Extraction PLE:\n\n        Progressive Layered Extraction(PLE) model slightly modifies the original structure of MMoE models and explicitly separate the experts into shared experts and task-specific experts. Let's assume there are m_{s} shared experts and m_{t} tasks-specific experts. S^{k}(x) is a selected matrix composed of (m_{s} + m_{t}) D-dimensional vectors, with dimension as (m_{s} + m_{t}) \\times D. w^{k}(x) denotes the gating function with size (m_{s} + m_{t}) and W^{k}_{g} is a trainable parameters with dimension as (m_{s} + m_{t}) \\times D. t^{k} denotes the task-specific tower paratmeters. The progressive extraction layer means that the gating network g^{k,j}(x) of j-th extraction layer takes the output of previous gating layers g^{k,j-1}(x) as inputs.\n        \nRelated Documents\n\nSee below link of paper Progressive Layered Extraction (PLE): A Novel Multi-Task Learning (MTL) Model for Personalized Recommendations for more details. \n\nRelated Videos\n\n\n", "tag": "machine learning,multi task", "prompt": "Please give me detailed tutorial of Progressive Layered Extraction PLE?"}
{"completion": " The Latex Code for equation Model-Agnostic Meta-Learning MAMLis <equation>\\\\min_{\\\\theta} \\\\sum_{\\\\mathcal{T}_{i} \\\\sim p(\\\\mathcal{T})} \\\\mathcal{L}_{\\\\mathcal{T}_{i}}(f_{\\\\theta^{'}_{i}}) = \\\\sum_{\\\\mathcal{T}_{i} \\\\sim p(\\\\mathcal{T})} \\\\mathcal{L}_{\\\\mathcal{T}_{i}}(f_{\\\\theta_{i} - \\\\alpha \\\\nabla_{\\\\theta} \\\\mathcal{L}_{\\\\mathcal{T}_{i}} (f_{\\\\theta}) })</equation>", "tag": "machine learning,meta learning", "prompt": "What is the equation of Model-Agnostic Meta-Learning MAML?"}
{"completion": " The Latex Code for equation TransHis <equation>f_{r}(h,t) =||h_{\\\\perp} + d_{r} - t_{\\\\perp} ||^{2}_{2}=||(h - w_{r}hw_{r}) + d_{r} - (t - w_{r}tw_{r}) ||^{2}_{2}</equation>", "tag": "machine learning,KG", "prompt": "What is the latex code of equation TransH?"}
{"completion": " The Latex Code for equation Kullback-Leibler Divergenceis <equation>KL(P||Q)=\\\\sum_{x}P(x)\\\\log(\\\\frac{P(x)}{Q(x)})</equation>", "tag": "machine learning,kl divergence", "prompt": "Show me the latex code of equation Kullback-Leibler Divergence?"}
{"completion": " The Latex Code for equation Propensity Scoreis <equation>e := p(W=1|X=x)</equation>", "tag": "machine learning,causual inference", "prompt": "How to write equation Propensity Score?"}
{"completion": " The equation for Kullback-Leibler Divergence is <equation>KL(P||Q)=\\\\sum_{x}P(x)\\\\log(\\\\frac{P(x)}{Q(x)})</equation>. The meaning of symbol <equation>KL(P||Q)</equation> in Kullback-Leibler Divergence is: KL Divergence between P and Q.", "tag": "machine learning,kl divergence", "prompt": "What does the symbol mean <equation>KL(P||Q)</equation> in Kullback-Leibler Divergence?"}
{"completion": " The equation for Jensen-Shannon Divergence JS-Divergence is <equation>JS(P||Q)=\\\\frac{1}{2}KL(P||\\\\frac{(P+Q)}{2})+\\\\frac{1}{2}KL(Q||\\\\frac{(P+Q)}{2})</equation>. The meaning of symbol <equation>P(x)</equation> in Jensen-Shannon Divergence JS-Divergence is: Distribution of P(x) over x.", "tag": "machine learning", "prompt": "Help me find the meaning of symbol <equation>P(x)</equation> in Jensen-Shannon Divergence JS-Divergence?"}
{"completion": " The equation for Conditional Average Treatment Effect CATE is: <equation>\\\\tau(x):=\\\\mathbb{E}[Y(1)-Y(0)|X=x]</equation>. Here is the brief introduction of Conditional Average Treatment Effect CATE:\n            Since we can't observe ITE of item i directly, most causal inference models estimate the conditional average treatment effect(CATE) conditioned on item i (X=x_{i}).\n        ", "tag": "machine learning,causual inference", "prompt": "I am interested in Conditional Average Treatment Effect CATE?"}
{"completion": " The equation for KL-Divergence is: <equation>KL(P||Q)=\\\\sum_{x}P(x)\\\\log(\\\\frac{P(x)}{Q(x)})</equation>. Here is the brief introduction of KL-Divergence:\n        Latex code for the Kullback-Leibler Divergence. I will briefly introduce the notations in this formulation. \n        \n: KL Divergence between P and Q\n: Distribution of P(x) over x\n: Distribution of Q(x) over x\n\n\nRelated Documents\n\n\n\nRelated Videos\n\n\n", "tag": "machine learning", "prompt": "Can you explain KL-Divergence?"}
{"completion": " The Latex Code for equation TransEis <equation>\\\\mathcal{L}=\\\\sum_{(h,r,t) \\\\in S} \\\\sum_{(h^{'},r^{'},t^{'}) \\\\in S^{'}_{(h,r,t)}} \\\\[ \\\\gamma + d(h + r, t) - d(h^{'} + r^{'}, t^{'}) \\\\]_{+} \\\\\\\\ S^{'}_{(h,r,t)}=\\\\{(h^{'},r,t)|h^{'} \\\\in E\\\\} \\\\cup \\\\{(h,r,t^{'})|t^{'} \\\\in E\\\\} \\\\\\\\ d(h + r, t)=||h + r - t||^{2}_{2}</equation>", "tag": "machine learning", "prompt": "Please give me some hints on equation TransE?"}
{"completion": " The equation for Progressive Layered Extraction PLE is: <equation>g^{k}(x)=w^{k}(x)S^{k}(x) \\\\\\\\\\             w^{k}(x)=\\\\text{softmax}(W^{k}_{g}x) \\\\\\\\\\             S^{k}(x)=\\\\[E^{T}_{(k,1)},E^{T}_{(k,2)},...,E^{T}_{(k,m_{k})},E^{T}_{(s,1)},E^{T}_{(s,2)},...,E^{T}_{(s,m_{s})}\\\\]^{T} \\\\\\\\\\             y^{k}(x)=t^{k}(g^{k}(x)) \\\\\\\\\\             g^{k,j}(x)=w^{k,j}(g^{k,j-1}(x))S^{k,j}(x) </equation>. Here is the brief introduction of Progressive Layered Extraction PLE:\n\n        Progressive Layered Extraction(PLE) model slightly modifies the original structure of MMoE models and explicitly separate the experts into shared experts and task-specific experts. Let's assume there are m_{s} shared experts and m_{t} tasks-specific experts. S^{k}(x) is a selected matrix composed of (m_{s} + m_{t}) D-dimensional vectors, with dimension as (m_{s} + m_{t}) \\times D. w^{k}(x) denotes the gating function with size (m_{s} + m_{t}) and W^{k}_{g} is a trainable parameters with dimension as (m_{s} + m_{t}) \\times D. t^{k} denotes the task-specific tower paratmeters. The progressive extraction layer means that the gating network g^{k,j}(x) of j-th extraction layer takes the output of previous gating layers g^{k,j-1}(x) as inputs.\n        \nRelated Documents\n\nSee below link of paper Progressive Layered Extraction (PLE): A Novel Multi-Task Learning (MTL) Model for Personalized Recommendations for more details. \n\nRelated Videos\n\n\n", "tag": "machine learning,multi task", "prompt": "I am interested in Progressive Layered Extraction PLE?"}
{"completion": " The Latex Code for equation Jensen-Shannon Divergence JS-Divergenceis <equation>JS(P||Q)=\\\\frac{1}{2}KL(P||\\\\frac{(P+Q)}{2})+\\\\frac{1}{2}KL(Q||\\\\frac{(P+Q)}{2})</equation>", "tag": "machine learning", "prompt": "How to write equation Jensen-Shannon Divergence JS-Divergence?"}
{"completion": " The equation for Maximum Mean Discrepancy MMD is <equation>\\\\textup{MMD}(\\\\mathbb{F},X,Y):=\\\\sup_{f \\\\in\\\\mathbb{F}}(\\\\frac{1}{m}\\\\sum_{i=1}^{m}f(x_{i}) -\\\\frac{1}{n}\\\\sum_{j=1}^{n}f(y_{j}))</equation>. The meaning of symbol <equation>\\frac{1}{m}\\sum_{i=1}^{m}f(x_{i})</equation> in Maximum Mean Discrepancy MMD is: Mean of probability distribution X with m data points..", "tag": "machine learning,mmd", "prompt": "Can you explain the symbol <equation>\\frac{1}{m}\\sum_{i=1}^{m}f(x_{i})</equation> in Maximum Mean Discrepancy MMD?"}
{"completion": " The equation for KL-Divergence is: <equation>KL(P||Q)=\\\\sum_{x}P(x)\\\\log(\\\\frac{P(x)}{Q(x)})</equation>. Here is the brief introduction of KL-Divergence:\n        Latex code for the Kullback-Leibler Divergence. I will briefly introduce the notations in this formulation. \n        \n: KL Divergence between P and Q\n: Distribution of P(x) over x\n: Distribution of Q(x) over x\n\n\nRelated Documents\n\n\n\nRelated Videos\n\n\n", "tag": "machine learning", "prompt": "What's the meaning of KL-Divergence?"}
{"completion": " The equation for Bellman Equation is <equation>v_{\\\\pi}(s)=\\\\sum_{a}\\\\pi(a|s)\\\\sum_{s^{'},r}p(s^{'},r|s,a)[r+\\\\gamma v_{\\\\pi}(s^{'})]</equation>. The meaning of symbol <equation>\\pi(a|s)</equation> in Bellman Equation is: Probability of choosing action a given state s.", "tag": "machine learning", "prompt": "What does the symbol mean <equation>\\pi(a|s)</equation> in Bellman Equation?"}
{"completion": " The Latex Code for equation Conditional Average Treatment Effect CATEis <equation>\\\\tau(x):=\\\\mathbb{E}[Y(1)-Y(0)|X=x]</equation>", "tag": "machine learning,causual inference", "prompt": "Can you write equation Conditional Average Treatment Effect CATE?"}
{"completion": " The equation for Domain Adaptation H-Divergence is: <equation>d_{\\\\mathcal{H}}(\\\\mathcal{D},\\\\mathcal{D}^{'})=2\\\\sup_{h \\\\in \\\\mathcal{H}}|\\\\Pr_{\\\\mathcal{D}}[I(h)]-\\\\Pr_{\\\\mathcal{D}^{'}}[I(h)]|</equation>. Here is the brief introduction of Domain Adaptation H-Divergence:\n\n            The H-Divergence is defined as the superior of divengence between two probability Pr(D) and Pr(D^{'}) for any hypothesis h in all hypotheses class H. In this formulation, given domain X with two data distribution D and D^{'} over X, I(h) denotes the characteristic function(indicator function) on X, which means that for subset of x in I(h), h(x) = 1. You can check more detailed information of domain adaptation and H-divergence in this paper by Shai Ben-David, A theory of learning from different domains for more details.\n        \nRelated Documents\n\nA theory of learning from different domains\n\nRelated Videos\n\n\n", "tag": "machine learning,transfer learning", "prompt": "I am interested in Domain Adaptation H-Divergence?"}
{"completion": " The equation for Bellman Equation is <equation>v_{\\\\pi}(s)=\\\\sum_{a}\\\\pi(a|s)\\\\sum_{s^{'},r}p(s^{'},r|s,a)[r+\\\\gamma v_{\\\\pi}(s^{'})]</equation>. The meaning of symbol <equation>\\pi(a|s)</equation> in Bellman Equation is: Probability of choosing action a given state s.", "tag": "machine learning", "prompt": "Help me find the meaning of symbol <equation>\\pi(a|s)</equation> in Bellman Equation?"}
{"completion": " The equation for TransH is: <equation>f_{r}(h,t) =||h_{\\\\perp} + d_{r} - t_{\\\\perp} ||^{2}_{2}=||(h - w_{r}hw_{r}) + d_{r} - (t - w_{r}tw_{r}) ||^{2}_{2}</equation>. Here is the brief introduction of TransH:\n     TransH model learns low-dimensional representations of knowledge graphs triples on the hyperplane of the entities and relations. See paper Knowledge Graph Embedding by Translating on Hyperplanes for more details.\n        Related Documents\n\nKnowledge Graph Embedding by Translating on Hyperplanes\n\nRelated Videos\n\n\n", "tag": "machine learning,KG", "prompt": "I am interested in TransH?"}
{"completion": " The Latex Code for equation TransRis <equation>h_{r}=hM_{r}, t_{r}=tM_{r} \\\\\\\\f_{r}(h, t) = ||h_{r} + r - t_{r}||^{2}_{2}=||hM_{r}+r-tM_{r}||^{2}_{2}</equation>", "tag": "machine learning,KG", "prompt": "Show me the latex code of equation TransR?"}
{"completion": " The Latex Code for equation SimplEis <equation>s(e_{i}, r, e_{j}) = \\\\frac{1}{2}(<h_{e_{i}}, v_{r}, t_{e_{j}}> + <h_{e_{j}}, v_{r^{-}}, t_{e_{i}}>)</equation>", "tag": "machine learning,KG", "prompt": "What is the equation of SimplE?"}
{"completion": " The Latex Code for equation RotatEis <equation>f_{r}(h, t) = ||h \\\\circ r - t||^{2}_{2}</equation>", "tag": "machine learning,KG", "prompt": "Please give me some hints on equation RotatE?"}
{"completion": " The equation for Deep Kernel Learning is: <equation>k(x_{i},x_{j}|\\\\phi)=k(h(x_i,w_k),h(x_j,w_k)|w_k,\\\\phi)</equation>. Here is the brief introduction of Deep Kernel Learning:\n        The original data instance x_{i} is first mapped to latent space by a non-linear transformation h(x_{i}, w_{k}), usually a deep neural network with parameter w_{k}, and then passed to a kernel function k(x_{i},x_{j}|\\phi).\n        See below link Deep Kernel Learning for more details. \n    ", "tag": "machine learning,Deep Kernel Learning", "prompt": "Can you give me a brief introduction to Deep Kernel Learning?"}
{"completion": " The equation for Language Modelling is <equation>p(x)=\\\\prod^{n}_{i=1} p(s_{n}|s_{1},...,s_{n-1})</equation>. The meaning of symbol <equation>(s_{1}, s_{2}, ..., s_{n})</equation> in Language Modelling is: Variable length sequences of symbols.", "tag": "machine learning", "prompt": "What is the meaning of the symbol <equation>(s_{1}, s_{2}, ..., s_{n})</equation> in Language Modelling?"}
{"completion": " The Latex Code for equation Diffusion Model Forward Process Reparameterizationis <equation>x_{t}=\\\\sqrt{\\\\alpha_{t}}x_{t-1}+\\\\sqrt{1-\\\\alpha_{t}} \\\\epsilon_{t-1}\\\\\\\\=\\\\sqrt{\\\\alpha_{t}\\\\alpha_{t-1}}x_{t-2} + \\\\sqrt{1-\\\\alpha_{t}\\\\alpha_{t-1}} \\\\bar{\\\\epsilon}_{t-2}\\\\\\\\=\\\\text{...}\\\\\\\\=\\\\sqrt{\\\\bar{\\\\alpha}_{t}}x_{0}+\\\\sqrt{1-\\\\bar{\\\\alpha}_{t}}\\\\epsilon \\\\\\\\\\\\alpha_{t}=1-\\\\beta_{t}, \\\\bar{\\\\alpha}_{t}=\\\\prod_{t=1}^{T}\\\\alpha_{t}</equation>", "tag": "machine learning,diffusion", "prompt": "Show me the latex code of equation Diffusion Model Forward Process Reparameterization?"}
{"completion": " The equation for KL-Divergence is <equation>KL(P||Q)=\\\\sum_{x}P(x)\\\\log(\\\\frac{P(x)}{Q(x)})</equation>. The meaning of symbol <equation>Q(x)</equation> in KL-Divergence is: Distribution of Q(x) over x.", "tag": "machine learning", "prompt": "What is the meaning of <equation>Q(x)</equation> in KL-Divergence?"}
{"completion": " The Latex Code for equation Kullback-Leibler Divergenceis <equation>KL(P||Q)=\\\\sum_{x}P(x)\\\\log(\\\\frac{P(x)}{Q(x)})</equation>", "tag": "machine learning,kl divergence", "prompt": "Please give me some hints on equation Kullback-Leibler Divergence?"}
{"completion": " The equation for Maximum Mean Discrepancy MMD is <equation>\\\\textup{MMD}(\\\\mathbb{F},X,Y):=\\\\sup_{f \\\\in\\\\mathbb{F}}(\\\\frac{1}{m}\\\\sum_{i=1}^{m}f(x_{i}) -\\\\frac{1}{n}\\\\sum_{j=1}^{n}f(y_{j}))</equation>. The meaning of symbol <equation>\\textup{MMD}(\\mathbb{F},X,Y)</equation> in Maximum Mean Discrepancy MMD is: Superior of the discrepancy measure between two distribution..", "tag": "machine learning,mmd", "prompt": "Can you explain the symbol <equation>\\textup{MMD}(\\mathbb{F},X,Y)</equation> in Maximum Mean Discrepancy MMD?"}
{"completion": " The equation for TransE is: <equation>\\\\mathcal{L}=\\\\sum_{(h,r,t) \\\\in S} \\\\sum_{(h^{'},r^{'},t^{'}) \\\\in S^{'}_{(h,r,t)}} \\\\[ \\\\gamma + d(h + r, t) - d(h^{'} + r^{'}, t^{'}) \\\\]_{+} \\\\\\\\ S^{'}_{(h,r,t)}=\\\\{(h^{'},r,t)|h^{'} \\\\in E\\\\} \\\\cup \\\\{(h,r,t^{'})|t^{'} \\\\in E\\\\} \\\\\\\\ d(h + r, t)=||h + r - t||^{2}_{2}</equation>. Here is the brief introduction of TransE:\n      Given a training set S of triplets (h, l, t) composed of two entities h, t ? E (the set of entities) and a relationship l ? L (the set of relationships), our model learns vector embeddings of the entities and the relationships. The embeddings take values in Rk (k is a model hyperparameter) and are denoted with the same letters, in boldface characters. The basic idea behind our model is that the functional relation induced by the l-labeled edges corresponds to a translation of the embeddings, i.e. we want that h + l ? t when (h, l, t) holds (t should be a nearest neighbor of h + l), while h + l should be far away from t otherwise. Following an energy-based framework, the energy of a triplet is equal to d(h + l, t) for some dissimilarity measure d, which we take to be either the L1 or the L2 -norm. To learn such embeddings, we minimize a margin-based ranking criterion over the training set. See paper Translating Embeddings for Modeling Multi-relational Data for more details.\n\n        Related Documents\n\nTranslating Embeddings for Modeling Multi-relational Data\n\nRelated Videos\n\n\n", "tag": "machine learning", "prompt": "Please give me detailed tutorial of TransE?"}
{"completion": " The Latex Code for equation GraphSageis <equation>h^{0}_{v} \\\\leftarrow x_{v} \\\\\\\\\\             \\\\textbf{for} k \\\\in \\\\{1,2,...,K\\\\} \\\\text{do}\\\\\\\\\\             \\\\textbf{for} v \\\\in V \\\\text{do} \\\\\\\\\\             h^{k}_{N_{v}} \\\\leftarrow \\\\textbf{AGGREGATE}_{k}(h^{k-1}_{u}, u \\\\in N(v)); \\\\\\\\\\                         h^{k}_{v} \\\\leftarrow \\\\sigma (W^{k} \\\\textbf{concat}(h^{k-1}_{v},h^{k}_{N_{v}})) \\\\\\\\\\             \\\\textbf{end} \\\\\\\\\\             h^{k}_{v}=h^{k}_{v}/||h^{k}_{v}||_{2},\\\\forall v \\\\in V \\\\\\\\\\             \\\\textbf{end} \\\\\\\\\\             z_{v} \\\\leftarrow h^{k}_{v} \\\\\\\\\\ J_{\\\\textbf{z}_{u}}=-\\\\log (\\\\sigma (\\\\textbf{z}_{u}^{T}\\\\textbf{z}_{v})) - Q \\\\mathbb{E}_{v_{n} \\\\sim p_n(v)} \\\\log(\\\\sigma (-\\\\textbf{z}_{u}^{T}\\\\textbf{z}_{v_{n}}))</equation>", "tag": "machine learning,graph,GNN", "prompt": "Can you write equation GraphSage?"}
{"completion": " The related materials of Multi-Gate Mixture of Experts MMoE is: 1.Modeling Task Relationships in Multi-task Learning with Multi-gate Mixture-of-Experts:<url>https://dl.acm.org/doi/pdf/10.1145/3219819.3220007</url>;", "tag": "machine learning,multi task", "prompt": "Can you help me find related materials of Multi-Gate Mixture of Experts MMoE?"}
{"completion": " The related materials of Model-Agnostic Meta-Learning MAML is: ", "tag": "machine learning,meta learning", "prompt": "Can you help me find related materials of Model-Agnostic Meta-Learning MAML?"}
{"completion": " The Latex Code for equation Domain Adaptation H-Divergenceis <equation>d_{\\\\mathcal{H}}(\\\\mathcal{D},\\\\mathcal{D}^{'})=2\\\\sup_{h \\\\in \\\\mathcal{H}}|\\\\Pr_{\\\\mathcal{D}}[I(h)]-\\\\Pr_{\\\\mathcal{D}^{'}}[I(h)]|</equation>", "tag": "machine learning,transfer learning", "prompt": "What is the latex code of equation Domain Adaptation H-Divergence?"}
{"completion": " The Latex Code for equation Support Vector Machine SVMis <equation>\\\\max_{w,b} \\\\frac{2}{||w||} \\\\\\\\\\             s.t.\\\\ y_{i}(w^{T}x_{i} + b) \\\\geq 1, i=1,2,...,m  \\\\\\\\ \\             L(w,b,\\\\alpha)=\\\\frac{1}{2}||w||^2 + \\\\sum^{m}_{i=1}a_{i}(1-y_{i}(w^{T}x_{i} + b))</equation>", "tag": "machine learning,svm", "prompt": "What is the equation of Support Vector Machine SVM?"}
{"completion": " The equation for Diffusion Model Variational Lower Bound Loss is: <equation>\\\\begin{aligned}\\             L_\\\\text{VLB} &= L_T + L_{T-1} + \\\\dots + L_0 \\\\\\\\\\             \\\\text{where } L_T &= D_\\\\text{KL}(q(\\\\mathbf{x}_T \\\\vert \\\\mathbf{x}_0) \\\\parallel p_\\\\theta(\\\\mathbf{x}_T)) \\\\\\\\\\             L_t &= D_\\\\text{KL}(q(\\\\mathbf{x}_t \\\\vert \\\\mathbf{x}_{t+1}, \\\\mathbf{x}_0) \\\\parallel p_\\\\theta(\\\\mathbf{x}_t \\\\vert\\\\mathbf{x}_{t+1})) \\\\text{ for }1 \\\\leq t \\\\leq T-1 \\\\\\\\\\             L_0 &= - \\\\log p_\\\\theta(\\\\mathbf{x}_0 \\\\vert \\\\mathbf{x}_1)\\             \\\\end{aligned}</equation>. Here is the brief introduction of Diffusion Model Variational Lower Bound Loss:\nRelated Documents\n\nLatex Code for Diffusion Models Equations\nWeng, Lilian. (Jul 2021). What are diffusion models? Lil'Log.\n\nRelated Videos\n\n\n", "tag": "machine learning,diffusion", "prompt": "Please give me detailed tutorial of Diffusion Model Variational Lower Bound Loss?"}
{"completion": " The equation for Area Under Uplift Curve AUUC is: <equation>f(t)=(\\\\frac{Y^{T}_{t}}{N^{T}_{t}} - \\\\frac{Y^{C}_{t}}{N^{C}_{t}})(N^{T}_{t}+N^{C}_{t})</equation>. Here is the brief introduction of Area Under Uplift Curve AUUC:\n            Authors in this paper Causal Inference and Uplift Modeling A review of the literature  define AUUC coefficient as the area under the uplift curve.\n        ", "tag": "machine learning,causual inference", "prompt": "Can you give me a brief introduction to Area Under Uplift Curve AUUC?"}
{"completion": " The equation for Deep Kernel Learning is: <equation>k(x_{i},x_{j}|\\\\phi)=k(h(x_i,w_k),h(x_j,w_k)|w_k,\\\\phi)</equation>. Here is the brief introduction of Deep Kernel Learning:\n        The original data instance x_{i} is first mapped to latent space by a non-linear transformation h(x_{i}, w_{k}), usually a deep neural network with parameter w_{k}, and then passed to a kernel function k(x_{i},x_{j}|\\phi).\n        See below link Deep Kernel Learning for more details. \n    ", "tag": "machine learning,Deep Kernel Learning", "prompt": "Please give me detailed tutorial of Deep Kernel Learning?"}
{"completion": " The equation for Domain-Adversarial Neural Networks DANN is: <equation>\\\\min [\\\\frac{1}{m}\\\\sum^{m}_{1}\\\\mathcal{L}(f(\\\\textbf{x}^{s}_{i}),y_{i})+\\\\lambda \\\\max(-\\\\frac{1}{m}\\\\sum^{m}_{i=1}\\\\mathcal{L}^{d}(o(\\\\textbf{x}^{s}_{i}),1)-\\\\frac{1}{m^{'}}\\\\sum^{m^{'}}_{i=1}\\\\mathcal{L}^{d}(o(\\\\textbf{x}^{t}_{i}),0))]</equation>. Here is the brief introduction of Domain-Adversarial Neural Networks DANN:\n\n        In this formulation of Domain-Adversarial Neural Networks(DANN), authors add a domain adaptation regularizer term to the original loss function of source domain. The domain adaptation regularizer term are calculated based on the H-divergence of two distributions h(X_{S}) and h(X_{T}). The adversial network aims to maximize the likelihood that the domain classifier are unable to distingush a data point belongs to source domain S or target domain T. Function o(.) is the domain regressor which learns high level representation o(X) given input X. You can check more detailed information in this paper by Hana Ajakan, Pascal Germain, et al., Domain-Adversarial Neural Networks for more details.\n        \nRelated Documents\n\nDomain-Adversarial Neural Networks\n\nRelated Videos\n\n\n", "tag": "machine learning,transfer learning", "prompt": "What's the meaning of Domain-Adversarial Neural Networks DANN?"}
{"completion": " The equation for Support Vector Machine SVM is <equation>\\\\max_{w,b} \\\\frac{2}{||w||} \\\\\\\\\\             s.t.\\\\ y_{i}(w^{T}x_{i} + b) \\\\geq 1, i=1,2,...,m  \\\\\\\\ \\             L(w,b,\\\\alpha)=\\\\frac{1}{2}||w||^2 + \\\\sum^{m}_{i=1}a_{i}(1-y_{i}(w^{T}x_{i} + b))</equation>. The meaning of symbol <equation>L(w,b,\\alpha)</equation> in Support Vector Machine SVM is: Dual problem Lagrangian Relaxation.", "tag": "machine learning,svm", "prompt": "Help me find the meaning of symbol <equation>L(w,b,\\alpha)</equation> in Support Vector Machine SVM?"}
{"completion": " The Latex Code for equation Multi-Gate Mixture of Experts MMoEis <equation>g^{k}(x)=\\\\text{softmax}(W_{gk}x) \\\\\\\\\\             f^{k}(x)=\\\\sum^{n}_{i=1}g^{k}(x)_{i}f_{i}(x) \\\\\\\\\\             y_{k}=h^{k}(f^{k}(x))</equation>", "tag": "machine learning,multi task", "prompt": "Can you write equation Multi-Gate Mixture of Experts MMoE?"}
{"completion": " The Latex Code for equation T-Learneris <equation>\\\\mu_{0}(x)=\\\\mathbb{E}[Y(0)|X=x],\\\\mu_{1}(x)=\\\\mathbb{E}[Y(1)|X=x],\\\\\\\\\\                 \\\\hat{\\\\tau}(x)=\\\\hat{\\\\mu}_{1}(x)-\\\\hat{\\\\mu}_{0}(x)</equation>", "tag": "machine learning,causual inference", "prompt": "Can you write equation T-Learner?"}
{"completion": " The equation for SME Linear is: <equation>\\\\epsilon(lhs,rel,rhs)=E_{lhs(rel)}^{T}E_{rhs(rel)} \\\\\\\\=(W_{l1}E_{lhs}^{T} + W_{l2}E_{rel}^{T} + b_{l})^{T}(W_{r1}E_{rhs}^{T} + W_{r2}E_{rel}^{T} + b_{r})</equation>. Here is the brief introduction of SME Linear:\n\n             The energy function E (denoted SME) is encoded using a neural network, whose architecture first processes each entity in parallel, like in siamese networks. The intuition is that the relation type should first be used to extract relevant components from each argument\u00e2\u20ac\u2122s embedding, and put them in a space where they can then be compared. See paper A Semantic Matching Energy Function for Learning with Multi-relational Data for more details.\n        \nRelated Documents\n\n\">A Semantic Matching Energy Function for Learning with Multi-relational Data\n\nRelated Videos\n\n\n", "tag": "machine learning,KG", "prompt": "I am interested in SME Linear?"}
{"completion": " The equation for Maximum Mean Discrepancy MMD is: <equation>\\\\textup{MMD}(\\\\mathbb{F},X,Y):=\\\\sup_{f \\\\in\\\\mathbb{F}}(\\\\frac{1}{m}\\\\sum_{i=1}^{m}f(x_{i}) -\\\\frac{1}{n}\\\\sum_{j=1}^{n}f(y_{j}))</equation>. Here is the brief introduction of Maximum Mean Discrepancy MMD:\n        Latex code for the Maximum Mean Discrepancy MMD. I will briefly introduce the notations in this formulation. \n        \n: Superior of the discrepancy measure between two distribution.\n: Mean of probability distribution X with m data points.\n: Mean of probability distribution Y with n data points.\n\n\nRelated Documents\n\nA Kernel Two-Sample Test (MIT courses)\n\nRelated Videos\n\n\n", "tag": "machine learning,mmd", "prompt": "What's the meaning of Maximum Mean Discrepancy MMD?"}
{"completion": " The Latex Code for equation Graph Attention Network GATis <equation>h=\\\\{\\\\vec{h_{1}},\\\\vec{h_{2}},...,\\\\vec{h_{N}}\\\\}, \\\\\\\\\\             \\\\vec{h_{i}} \\\\in \\\\mathbb{R}^{F} \\\\\\\\\\             W \\\\in \\\\mathbb{R}^{F \\\\times F^{'}} \\\\\\\\\\             e_{ij}=a(Wh_{i},Wh_{j}) \\\\\\\\\\             k \\\\in \\\\mathcal{N}_{i},\\\\text{ neighbourhood nodes}\\\\\\\\\\             a_{ij}=\\\\text{softmax}_{j}(e_{ij})=\\\\frac{\\\\exp(e_{ij})}{\\\\sum_{k \\\\in \\\\mathcal{N}_{i}} \\\\exp(e_{ik})}</equation>", "tag": "machine learning,graph,GNN", "prompt": "What is the equation of Graph Attention Network GAT?"}
{"completion": " The Latex Code for equation Variational AutoEncoder VAEis <equation>\\\\log p_{\\\\theta}(x)=\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log p_{\\\\theta}(x)] \\\\\\\\\\         =\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log \\\\frac{p_{\\\\theta}(x,z)}{p_{\\\\theta}(z|x)}] \\\\\\\\\\         =\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log [\\\\frac{p_{\\\\theta}(x,z)}{q_{\\\\phi}(z|x)} \\\\times \\\\frac{q_{\\\\phi}(z|x)}{p_{\\\\theta}(z|x)}]] \\\\\\\\\\         =\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log [\\\\frac{p_{\\\\theta}(x,z)}{q_{\\\\phi}(z|x)} ]] +D_{KL}(q_{\\\\phi}(z|x) || p_{\\\\theta}(z|x))\\\\\\\\</equation>", "tag": "machine learning,VAE", "prompt": "What is the latex code of equation Variational AutoEncoder VAE?"}
{"completion": " The Latex Code for equation Diffusion Model Variational Lower Bound Lossis <equation>\\\\begin{aligned}\\             L_\\\\text{VLB} &= L_T + L_{T-1} + \\\\dots + L_0 \\\\\\\\\\             \\\\text{where } L_T &= D_\\\\text{KL}(q(\\\\mathbf{x}_T \\\\vert \\\\mathbf{x}_0) \\\\parallel p_\\\\theta(\\\\mathbf{x}_T)) \\\\\\\\\\             L_t &= D_\\\\text{KL}(q(\\\\mathbf{x}_t \\\\vert \\\\mathbf{x}_{t+1}, \\\\mathbf{x}_0) \\\\parallel p_\\\\theta(\\\\mathbf{x}_t \\\\vert\\\\mathbf{x}_{t+1})) \\\\text{ for }1 \\\\leq t \\\\leq T-1 \\\\\\\\\\             L_0 &= - \\\\log p_\\\\theta(\\\\mathbf{x}_0 \\\\vert \\\\mathbf{x}_1)\\             \\\\end{aligned}</equation>", "tag": "machine learning,diffusion", "prompt": "Show me the latex code of equation Diffusion Model Variational Lower Bound Loss?"}
{"completion": " The Latex Code for equation Conditional Random Field CRFis <equation>P(y|x)=\\\\frac{1}{Z(x)}\\\\exp(\\\\sum_{i,k}\\\\lambda_{k}t_{k}(y_{i-1},y_{i},x,i))+\\\\sum_{i,l}\\\\mu_{l}s_{l}(y_{i},x,i)) \\\\\\\\\\         Z(x)=\\\\sum_{y}\\\\exp(\\\\sum_{i,k}\\\\lambda_{k}t_{k}(y_{i-1},y_{i},x,i))+\\\\sum_{i,l}\\\\mu_{l}s_{l}(y_{i},x,i))</equation>", "tag": "machine learning,nlp", "prompt": "Show me the latex code of equation Conditional Random Field CRF?"}
{"completion": " The equation for KL-Divergence is <equation>KL(P||Q)=\\\\sum_{x}P(x)\\\\log(\\\\frac{P(x)}{Q(x)})</equation>. The meaning of symbol <equation>P(x)</equation> in KL-Divergence is: Distribution of P(x) over x.", "tag": "machine learning", "prompt": "What does the symbol mean <equation>P(x)</equation> in KL-Divergence?"}
{"completion": " The equation for Variational AutoEncoder VAE is: <equation>\\\\log p_{\\\\theta}(x)=\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log p_{\\\\theta}(x)] \\\\\\\\\\         =\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log \\\\frac{p_{\\\\theta}(x,z)}{p_{\\\\theta}(z|x)}] \\\\\\\\\\         =\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log [\\\\frac{p_{\\\\theta}(x,z)}{q_{\\\\phi}(z|x)} \\\\times \\\\frac{q_{\\\\phi}(z|x)}{p_{\\\\theta}(z|x)}]] \\\\\\\\\\         =\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log [\\\\frac{p_{\\\\theta}(x,z)}{q_{\\\\phi}(z|x)} ]] +D_{KL}(q_{\\\\phi}(z|x) || p_{\\\\theta}(z|x))\\\\\\\\</equation>. Here is the brief introduction of Variational AutoEncoder VAE:", "tag": "machine learning,VAE", "prompt": "Please give me detailed tutorial of Variational AutoEncoder VAE?"}
{"completion": " The related materials of Mahalanobis Distance is: 1.Mahalanobis Distance:<url>https://www.sciencedirect.com/topics/engineering/mahalanobis-distance</url>;", "tag": "machine learning,mahalanobis", "prompt": "Can you help me find related materials of Mahalanobis Distance?"}
{"completion": " The Latex Code for equation Proximal Policy Optimization PPOis <equation>L^{CLIP}(\\\\theta)=E_{t}[\\\\min(r_{t}(\\\\theta))A_{t}, \\\\text{clip}(r_{t}(\\\\theta), 1-\\\\epsilon,1+\\\\epsilon)A_{t}]</equation>", "tag": "machine learning", "prompt": "What is the latex code of equation Proximal Policy Optimization PPO?"}
{"completion": " The Latex Code for equation Unconfoundedness Assumptionis <equation>\\\\{Y_{i}(0),Y_{i}(1)\\\\}\\\\perp W_{i}|X_{i}</equation>", "tag": "machine learning,causual inference", "prompt": "How to write equation Unconfoundedness Assumption?"}
{"completion": " The equation for Unconfoundedness Assumption is: <equation>\\\\{Y_{i}(0),Y_{i}(1)\\\\}\\\\perp W_{i}|X_{i}</equation>. Here is the brief introduction of Unconfoundedness Assumption:\n        The unconfoundedness assumption or CIA (Conditional Independence assumption) assume that there are no hidden confounders between (Y(0),Y(1)) vector and treatment assignment vector W, conditioned on input X.\n    ", "tag": "machine learning,causual inference", "prompt": "Can you give me a brief introduction to Unconfoundedness Assumption?"}
{"completion": " The equation for Bellman Equation is <equation>v_{\\\\pi}(s)=\\\\sum_{a}\\\\pi(a|s)\\\\sum_{s^{'},r}p(s^{'},r|s,a)[r+\\\\gamma v_{\\\\pi}(s^{'})]</equation>. The meaning of symbol <equation>\\gamma</equation> in Bellman Equation is: Reward discount factor \\gamma.", "tag": "machine learning", "prompt": "What does the symbol mean <equation>\\gamma</equation> in Bellman Equation?"}
{"completion": " The equation for Jensen-Shannon Divergence JS-Divergence is <equation>JS(P||Q)=\\\\frac{1}{2}KL(P||\\\\frac{(P+Q)}{2})+\\\\frac{1}{2}KL(Q||\\\\frac{(P+Q)}{2})</equation>. The meaning of symbol <equation>JS(P||Q)</equation> in Jensen-Shannon Divergence JS-Divergence is: JS Divergence between P and Q, which is the symmetric divergence metric between distribution P and Q.", "tag": "machine learning", "prompt": "What is the meaning of <equation>JS(P||Q)</equation> in Jensen-Shannon Divergence JS-Divergence?"}
{"completion": " The equation for Support Vector Machine SVM is <equation>\\\\max_{w,b} \\\\frac{2}{||w||} \\\\\\\\\\             s.t.\\\\ y_{i}(w^{T}x_{i} + b) \\\\geq 1, i=1,2,...,m  \\\\\\\\ \\             L(w,b,\\\\alpha)=\\\\frac{1}{2}||w||^2 + \\\\sum^{m}_{i=1}a_{i}(1-y_{i}(w^{T}x_{i} + b))</equation>. The meaning of symbol <equation>y=wx+b</equation> in Support Vector Machine SVM is: Classifier.", "tag": "machine learning,svm", "prompt": "What does the symbol mean <equation>y=wx+b</equation> in Support Vector Machine SVM?"}
{"completion": " The Latex Code for equation Entire Space Multi-Task Model ESSMis <equation>L(\\\\theta_{cvr},\\\\theta_{ctr})=\\\\sum^{N}_{i=1}l(y_{i},f(x_{i};\\\\theta_{ctr}))+\\\\sum^{N}_{i=1}l(y_{i}\\\\&z_{i},f(x_{i};\\\\theta_{ctr}) \\\\times f(x_{i};\\\\theta_{cvr}))\\ </equation>", "tag": "machine learning,multi task", "prompt": "What is the latex code of equation Entire Space Multi-Task Model ESSM?"}
{"completion": " The equation for Graph Attention Network GAT is: <equation>h=\\\\{\\\\vec{h_{1}},\\\\vec{h_{2}},...,\\\\vec{h_{N}}\\\\}, \\\\\\\\\\             \\\\vec{h_{i}} \\\\in \\\\mathbb{R}^{F} \\\\\\\\\\             W \\\\in \\\\mathbb{R}^{F \\\\times F^{'}} \\\\\\\\\\             e_{ij}=a(Wh_{i},Wh_{j}) \\\\\\\\\\             k \\\\in \\\\mathcal{N}_{i},\\\\text{ neighbourhood nodes}\\\\\\\\\\             a_{ij}=\\\\text{softmax}_{j}(e_{ij})=\\\\frac{\\\\exp(e_{ij})}{\\\\sum_{k \\\\in \\\\mathcal{N}_{i}} \\\\exp(e_{ik})}</equation>. Here is the brief introduction of Graph Attention Network GAT:\n\n        GAT applies graph attentional layer to model the graph propagation. In each layer, the node i has attention on all the other nodes j. And the attention coefficient is calculated. For the attention calculation, only the set of neighbours nodes N_{i} of each node i contributes to the final softmax attention calculation. You can check more detailed information in this paper, GRAPH ATTENTION NETWORKS for more details.\n        \nRelated Documents\n\nGRAPH ATTENTION NETWORKS\n\nRelated Videos\n\n\n", "tag": "machine learning,graph,GNN", "prompt": "Please give me detailed tutorial of Graph Attention Network GAT?"}
{"completion": " The equation for Maximum Mean Discrepancy MMD is <equation>\\\\textup{MMD}(\\\\mathbb{F},X,Y):=\\\\sup_{f \\\\in\\\\mathbb{F}}(\\\\frac{1}{m}\\\\sum_{i=1}^{m}f(x_{i}) -\\\\frac{1}{n}\\\\sum_{j=1}^{n}f(y_{j}))</equation>. The meaning of symbol <equation>\\frac{1}{n}\\sum_{j=1}^{n}f(y_{j})</equation> in Maximum Mean Discrepancy MMD is: Mean of probability distribution Y with n data points..", "tag": "machine learning,mmd", "prompt": "Help me find the meaning of symbol <equation>\\frac{1}{n}\\sum_{j=1}^{n}f(y_{j})</equation> in Maximum Mean Discrepancy MMD?"}
{"completion": " The related materials of Support Vector Machine SVM is: ", "tag": "machine learning,svm", "prompt": "Can you help me find related materials of Support Vector Machine SVM?"}
{"completion": " The Latex Code for equation Graph Laplacianis <equation>L=I_{N}-D^{-\\\\frac{1}{2}}AD^{-\\\\frac{1}{2}} \\\\\\\\\\ L=U\\\\Lambda U^{T}</equation>", "tag": "machine learning,graph,GNN", "prompt": "Please give me some hints on equation Graph Laplacian?"}
{"completion": " The equation for Support Vector Machine SVM is <equation>\\\\max_{w,b} \\\\frac{2}{||w||} \\\\\\\\\\             s.t.\\\\ y_{i}(w^{T}x_{i} + b) \\\\geq 1, i=1,2,...,m  \\\\\\\\ \\             L(w,b,\\\\alpha)=\\\\frac{1}{2}||w||^2 + \\\\sum^{m}_{i=1}a_{i}(1-y_{i}(w^{T}x_{i} + b))</equation>. The meaning of symbol <equation>L(w,b,\\alpha)</equation> in Support Vector Machine SVM is: Dual problem Lagrangian Relaxation.", "tag": "machine learning,svm", "prompt": "Can you explain the symbol <equation>L(w,b,\\alpha)</equation> in Support Vector Machine SVM?"}
{"completion": " The equation for Diffusion Model Forward Process is: <equation>q(x_{t}|x_{t-1})=\\\\mathcal{N}(x_{t};\\\\sqrt{1-\\\\beta_{t}}x_{t-1},\\\\beta_{t}I) \\\\\\\\q(x_{1:T}|x_{0})=\\\\prod_{t=1}^{T}q(x_{t}|x_{t-1})</equation>. Here is the brief introduction of Diffusion Model Forward Process:\nRelated Documents\n\nLatex Code for Diffusion Models Equations\nWeng, Lilian. (Jul 2021). What are diffusion models? Lil'Log.\n\nRelated Videos\n\n\n", "tag": "machine learning,diffusion", "prompt": "What's the meaning of Diffusion Model Forward Process?"}
{"completion": " The Latex Code for equation Domain-Adversarial Neural Networks DANNis <equation>\\\\min [\\\\frac{1}{m}\\\\sum^{m}_{1}\\\\mathcal{L}(f(\\\\textbf{x}^{s}_{i}),y_{i})+\\\\lambda \\\\max(-\\\\frac{1}{m}\\\\sum^{m}_{i=1}\\\\mathcal{L}^{d}(o(\\\\textbf{x}^{s}_{i}),1)-\\\\frac{1}{m^{'}}\\\\sum^{m^{'}}_{i=1}\\\\mathcal{L}^{d}(o(\\\\textbf{x}^{t}_{i}),0))]</equation>", "tag": "machine learning,transfer learning", "prompt": "What is the equation of Domain-Adversarial Neural Networks DANN?"}
{"completion": " The equation for Diffusion Model Variational Lower Bound Loss is: <equation>\\\\begin{aligned}\\             L_\\\\text{VLB} &= L_T + L_{T-1} + \\\\dots + L_0 \\\\\\\\\\             \\\\text{where } L_T &= D_\\\\text{KL}(q(\\\\mathbf{x}_T \\\\vert \\\\mathbf{x}_0) \\\\parallel p_\\\\theta(\\\\mathbf{x}_T)) \\\\\\\\\\             L_t &= D_\\\\text{KL}(q(\\\\mathbf{x}_t \\\\vert \\\\mathbf{x}_{t+1}, \\\\mathbf{x}_0) \\\\parallel p_\\\\theta(\\\\mathbf{x}_t \\\\vert\\\\mathbf{x}_{t+1})) \\\\text{ for }1 \\\\leq t \\\\leq T-1 \\\\\\\\\\             L_0 &= - \\\\log p_\\\\theta(\\\\mathbf{x}_0 \\\\vert \\\\mathbf{x}_1)\\             \\\\end{aligned}</equation>. Here is the brief introduction of Diffusion Model Variational Lower Bound Loss:\nRelated Documents\n\nLatex Code for Diffusion Models Equations\nWeng, Lilian. (Jul 2021). What are diffusion models? Lil'Log.\n\nRelated Videos\n\n\n", "tag": "machine learning,diffusion", "prompt": "Can you explain Diffusion Model Variational Lower Bound Loss?"}
{"completion": " The Latex Code for equation GraphSageis <equation>h^{0}_{v} \\\\leftarrow x_{v} \\\\\\\\\\             \\\\textbf{for} k \\\\in \\\\{1,2,...,K\\\\} \\\\text{do}\\\\\\\\\\             \\\\textbf{for} v \\\\in V \\\\text{do} \\\\\\\\\\             h^{k}_{N_{v}} \\\\leftarrow \\\\textbf{AGGREGATE}_{k}(h^{k-1}_{u}, u \\\\in N(v)); \\\\\\\\\\                         h^{k}_{v} \\\\leftarrow \\\\sigma (W^{k} \\\\textbf{concat}(h^{k-1}_{v},h^{k}_{N_{v}})) \\\\\\\\\\             \\\\textbf{end} \\\\\\\\\\             h^{k}_{v}=h^{k}_{v}/||h^{k}_{v}||_{2},\\\\forall v \\\\in V \\\\\\\\\\             \\\\textbf{end} \\\\\\\\\\             z_{v} \\\\leftarrow h^{k}_{v} \\\\\\\\\\ J_{\\\\textbf{z}_{u}}=-\\\\log (\\\\sigma (\\\\textbf{z}_{u}^{T}\\\\textbf{z}_{v})) - Q \\\\mathbb{E}_{v_{n} \\\\sim p_n(v)} \\\\log(\\\\sigma (-\\\\textbf{z}_{u}^{T}\\\\textbf{z}_{v_{n}}))</equation>", "tag": "machine learning,graph,GNN", "prompt": "What is the latex code of equation GraphSage?"}
{"completion": " The Latex Code for equation Variational AutoEncoder VAEis <equation>\\\\log p_{\\\\theta}(x)=\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log p_{\\\\theta}(x)] \\\\\\\\\\         =\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log \\\\frac{p_{\\\\theta}(x,z)}{p_{\\\\theta}(z|x)}] \\\\\\\\\\         =\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log [\\\\frac{p_{\\\\theta}(x,z)}{q_{\\\\phi}(z|x)} \\\\times \\\\frac{q_{\\\\phi}(z|x)}{p_{\\\\theta}(z|x)}]] \\\\\\\\\\         =\\\\mathbb{E}_{q_{\\\\phi}(z|x)}[\\\\log [\\\\frac{p_{\\\\theta}(x,z)}{q_{\\\\phi}(z|x)} ]] +D_{KL}(q_{\\\\phi}(z|x) || p_{\\\\theta}(z|x))\\\\\\\\</equation>", "tag": "machine learning,VAE", "prompt": "Can you write equation Variational AutoEncoder VAE?"}
{"completion": " The equation for Diffusion Model Variational Lower Bound is: <equation>\\\\begin{aligned}\\             - \\\\log p_\\\\theta(\\\\mathbf{x}_0) \\             &\\\\leq - \\\\log p_\\\\theta(\\\\mathbf{x}_0) + D_\\\\text{KL}(q(\\\\mathbf{x}_{1:T}\\\\vert\\\\mathbf{x}_0) \\\\| p_\\\\theta(\\\\mathbf{x}_{1:T}\\\\vert\\\\mathbf{x}_0) ) \\\\\\\\\\             &= -\\\\log p_\\\\theta(\\\\mathbf{x}_0) + \\\\mathbb{E}_{\\\\mathbf{x}_{1:T}\\\\sim q(\\\\mathbf{x}_{1:T} \\\\vert \\\\mathbf{x}_0)} \\\\Big[ \\\\log\\\\frac{q(\\\\mathbf{x}_{1:T}\\\\vert\\\\mathbf{x}_0)}{p_\\\\theta(\\\\mathbf{x}_{0:T}) / p_\\\\theta(\\\\mathbf{x}_0)} \\\\Big] \\\\\\\\\\             &= -\\\\log p_\\\\theta(\\\\mathbf{x}_0) + \\\\mathbb{E}_q \\\\Big[ \\\\log\\\\frac{q(\\\\mathbf{x}_{1:T}\\\\vert\\\\mathbf{x}_0)}{p_\\\\theta(\\\\mathbf{x}_{0:T})} + \\\\log p_\\\\theta(\\\\mathbf{x}_0) \\\\Big] \\\\\\\\\\             &= \\\\mathbb{E}_q \\\\Big[ \\\\log \\\\frac{q(\\\\mathbf{x}_{1:T}\\\\vert\\\\mathbf{x}_0)}{p_\\\\theta(\\\\mathbf{x}_{0:T})} \\\\Big] \\\\\\\\\\             \\\\text{Let }L_\\\\text{VLB} \\             &= \\\\mathbb{E}_{q(\\\\mathbf{x}_{0:T})} \\\\Big[ \\\\log \\\\frac{q(\\\\mathbf{x}_{1:T}\\\\vert\\\\mathbf{x}_0)}{p_\\\\theta(\\\\mathbf{x}_{0:T})} \\\\Big] \\\\geq - \\\\mathbb{E}_{q(\\\\mathbf{x}_0)} \\\\log p_\\\\theta(\\\\mathbf{x}_0)\\             \\\\end{aligned}</equation>. Here is the brief introduction of Diffusion Model Variational Lower Bound:\nRelated Documents\n\nLatex Code for Diffusion Models Equations\nWeng, Lilian. (Jul 2021). What are diffusion models? Lil'Log.\n\nRelated Videos\n\n\n", "tag": "machine learning,diffusion", "prompt": "Please give me detailed tutorial of Diffusion Model Variational Lower Bound?"}
{"completion": " The related materials of TransR is: 1.\">Learning Entity and Relation Embeddings for Knowledge Graph Completion:<url>https://www.aaai.org/ocs/index.php/AAAI/AAAI15/paper/viewFile/9571/9523/</url>;", "tag": "machine learning,KG", "prompt": "Can you help me find related materials of TransR?"}
{"completion": " The equation for Language Modelling is <equation>p(x)=\\\\prod^{n}_{i=1} p(s_{n}|s_{1},...,s_{n-1})</equation>. The meaning of symbol <equation>p(x)</equation> in Language Modelling is: \n                : Factorize the joint probabilities over symbols p(x) as the product of conditional probabilities .", "tag": "machine learning", "prompt": "What is the meaning of the symbol <equation>p(x)</equation> in Language Modelling?"}
{"completion": " The Latex Code for equation Generative Adversarial Networks GANis <equation>\\\\min_{G} \\\\max_{D} V(D,G)=\\\\mathbb{E}_{x \\\\sim p_{data}(x)}[\\\\log D(x)]+\\\\mathbb{E}_{z \\\\sim p_{z}(z)}[\\\\log(1-D(G(z)))]</equation>", "tag": "machine learning,gan", "prompt": "Please give me some hints on equation Generative Adversarial Networks GAN?"}
{"completion": " The equation for KL-Divergence is <equation>KL(P||Q)=\\\\sum_{x}P(x)\\\\log(\\\\frac{P(x)}{Q(x)})</equation>. The meaning of symbol <equation>P(x)</equation> in KL-Divergence is: Distribution of P(x) over x.", "tag": "machine learning", "prompt": "What is the meaning of <equation>P(x)</equation> in KL-Divergence?"}
{"completion": " The equation for Conditional Average Treatment Effect CATE is: <equation>\\\\tau(x):=\\\\mathbb{E}[Y(1)-Y(0)|X=x]</equation>. Here is the brief introduction of Conditional Average Treatment Effect CATE:\n            Since we can't observe ITE of item i directly, most causal inference models estimate the conditional average treatment effect(CATE) conditioned on item i (X=x_{i}).\n        ", "tag": "machine learning,causual inference", "prompt": "What's the meaning of Conditional Average Treatment Effect CATE?"}
{"completion": " The equation for Area Under Uplift Curve AUUC is: <equation>f(t)=(\\\\frac{Y^{T}_{t}}{N^{T}_{t}} - \\\\frac{Y^{C}_{t}}{N^{C}_{t}})(N^{T}_{t}+N^{C}_{t})</equation>. Here is the brief introduction of Area Under Uplift Curve AUUC:\n            Authors in this paper Causal Inference and Uplift Modeling A review of the literature  define AUUC coefficient as the area under the uplift curve.\n        ", "tag": "machine learning,causual inference", "prompt": "I am interested in Area Under Uplift Curve AUUC?"}
{"completion": " The Latex Code for equation Bound on Target Domain Erroris <equation>\\\\epsilon_{T}(h) \\\\le \\\\hat{\\\\epsilon}_{S}(h) + \\\\sqrt{\\\\frac{4}{m}(d \\\\log \\\\frac{2em}{d} + \\\\log \\\\frac{4}{\\\\delta })} + d_{\\\\mathcal{H}}(\\\\tilde{\\\\mathcal{D}}_{S}, \\\\tilde{\\\\mathcal{D}}_{T}) + \\\\lambda \\\\\\\\\\             \\\\lambda = \\\\lambda_{S} + \\\\lambda_{T}</equation>", "tag": "machine learning,transfer learning", "prompt": "What is the equation of Bound on Target Domain Error?"}
{"completion": " The Latex Code for equation T-Learneris <equation>\\\\mu_{0}(x)=\\\\mathbb{E}[Y(0)|X=x],\\\\mu_{1}(x)=\\\\mathbb{E}[Y(1)|X=x],\\\\\\\\\\                 \\\\hat{\\\\tau}(x)=\\\\hat{\\\\mu}_{1}(x)-\\\\hat{\\\\mu}_{0}(x)</equation>", "tag": "machine learning,causual inference", "prompt": "What is the latex code of equation T-Learner?"}
{"completion": " The related materials of Graph Attention Network GAT is: 1.GRAPH ATTENTION NETWORKS:<url>https://arxiv.org/pdf/1710.10903.pdf</url>;", "tag": "machine learning,graph,GNN", "prompt": "Can you help me find related materials of Graph Attention Network GAT?"}
{"completion": " The Latex Code for equation Maximum Mean Discrepancy MMDis <equation>\\\\textup{MMD}(\\\\mathbb{F},X,Y):=\\\\sup_{f \\\\in\\\\mathbb{F}}(\\\\frac{1}{m}\\\\sum_{i=1}^{m}f(x_{i}) -\\\\frac{1}{n}\\\\sum_{j=1}^{n}f(y_{j}))</equation>", "tag": "machine learning,mmd", "prompt": "Can you write equation Maximum Mean Discrepancy MMD?"}
{"completion": " The equation for Maximum Mean Discrepancy MMD is <equation>\\\\textup{MMD}(\\\\mathbb{F},X,Y):=\\\\sup_{f \\\\in\\\\mathbb{F}}(\\\\frac{1}{m}\\\\sum_{i=1}^{m}f(x_{i}) -\\\\frac{1}{n}\\\\sum_{j=1}^{n}f(y_{j}))</equation>. The meaning of symbol <equation>\\textup{MMD}(\\mathbb{F},X,Y)</equation> in Maximum Mean Discrepancy MMD is: Superior of the discrepancy measure between two distribution..", "tag": "machine learning,mmd", "prompt": "Help me find the meaning of symbol <equation>\\textup{MMD}(\\mathbb{F},X,Y)</equation> in Maximum Mean Discrepancy MMD?"}
{"completion": " The equation for Bellman Equation is <equation>v_{\\\\pi}(s)=\\\\sum_{a}\\\\pi(a|s)\\\\sum_{s^{'},r}p(s^{'},r|s,a)[r+\\\\gamma v_{\\\\pi}(s^{'})]</equation>. The meaning of symbol <equation>v_{\\pi}(s^{'})</equation> in Bellman Equation is: Value at state s^{'} in policy \\pi.", "tag": "machine learning", "prompt": "What is the meaning of <equation>v_{\\pi}(s^{'})</equation> in Bellman Equation?"}
{"completion": " The equation for SimplE is: <equation>s(e_{i}, r, e_{j}) = \\\\frac{1}{2}(<h_{e_{i}}, v_{r}, t_{e_{j}}> + <h_{e_{j}}, v_{r^{-}}, t_{e_{i}}>)</equation>. Here is the brief introduction of SimplE:\n     The similarity function for a triple (e1 , r , e2 ) is ?he1 , vr , te2 ?.\n     SimplE considers two vectors he,te ? Rd as the embedding of each entity (similar to CP), and two vectors vr , vr?1 ? Rd for each relation r. The similarity function of SimplE foratriple(ei,r,ej)isdefinedas 1(?hei,vr,tej?+?hej,vr?1,tei?),i.e. theaverageoftheCP 2 scoresfor(ei,r,ej)and(ej,r?1,ei). See paper SimplE Embedding for Link Prediction in Knowledge Graphs for more details.\n    ", "tag": "machine learning,KG", "prompt": "What's the meaning of SimplE?"}
{"completion": " The equation for Bregman Divergences is: <equation>d_{\\\\phi}(z,z^{'})=\\\\phi(z) - \\\\phi(z^{'})-(z-z^{'})^{T} \\\\nabla \\\\phi(z^{'})</equation>. Here is the brief introduction of Bregman Divergences:\n         The prototypi- cal networks algorithm is equivalent to performing mixture density estimation on the support set with an exponential family density. A regular Bregman divergence d_{\\phi} is defined as above. \\phi is a differentiable, strictly convex function of the Legendre type. Examples of Bregman divergences include squared Euclidean distance and Mahalanobis distance.\n    ", "tag": "machine learning", "prompt": "Can you give me a brief introduction to Bregman Divergences?"}
